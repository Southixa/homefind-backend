// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserType {
  user
  admin
  supperadmin
}

model User {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  isActive     Boolean   @default(true) @db.Bool
  username     String
  phoneNumber  String
  email        String
  password     String
  profile      String    @default("")
  kyc          Boolean   @default(false)
  role         UserType  @default(user)
  loginversion Int       @default(1)
  createAt     DateTime  @default(now())
  updateAt     DateTime  @updatedAt
  Kyc          Kyc[]
  Wallet       Wallet[]
  Review       Review[]
  Service      Service[]

  @@index([username])
  @@index([phoneNumber])
  @@index([email])
}

model Kyc {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  isActive  Boolean  @default(true) @db.Bool
  userId    String   @db.ObjectId
  firstname String
  lastname  String
  age       Int
  village   String
  district  String
  province  String
  docType   String
  docNo     String
  docImage  String[]
  profile   String
  user      User     @relation(fields: [userId], references: [id])
  createAt  DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Order {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  isActive Boolean  @default(true) @db.Bool
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  Review   Review[]
}

model Banner {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  isActive  Boolean  @default(true) @db.Bool
  image     String
  link_url  String
  isPublice Boolean  @default(true) @db.Bool
  createAt  DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Promotion {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  isActive   Boolean  @default(true)
  qty        Int
  code       String
  start_time DateTime
  end_time   DateTime
  isGiven    Boolean  @default(true) @db.Bool
  createAt   DateTime @default(now())
  updateAt   DateTime @updatedAt
  Wallet     Wallet[]
}

model Payment {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  isActive    Boolean  @default(true) @db.Bool
  bankName    String
  accountName String
  accountNo   String
  qr_Image    String
  isPublic    Boolean  @default(true) @db.Bool
  createAt    DateTime @default(now())
  updateAt    DateTime @updatedAt
}

model Review {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  isActive Boolean  @default(true) @db.Bool
  userId   String   @db.ObjectId
  orderId  String   @db.ObjectId
  reason   String
  star     Float
  user     User     @relation(fields: [userId], references: [id])
  order    Order    @relation(fields: [orderId], references: [id])
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Service {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  isActive        Boolean  @default(true) @db.Bool
  poster_id       String   @db.ObjectId
  category_id     String   @db.ObjectId
  coverImage      String
  images          String[]
  name            String
  village         String
  district        String
  province        String
  priceMonth      Float
  priceYear       Float
  priceCommission Float
  detail          String
  isShare         Boolean
  view            Int      @default(1)
  status_id       String   @db.ObjectId
  user            User     @relation(fields: [poster_id], references: [id])
  category        Category @relation(fields: [category_id], references: [id])
  status          Status   @relation(fields: [status_id], references: [id])
  createAt        DateTime @default(now())
  updateAt        DateTime @updatedAt
}

model Status {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  isActive Boolean   @default(true) @db.Bool
  name     String
  createAt DateTime  @default(now())
  updateAt DateTime  @updatedAt
  Service  Service[]
}

model Category {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  isActive Boolean   @default(true) @db.Bool
  title    String
  icon     String
  createAt DateTime  @default(now())
  updateAt DateTime  @updatedAt
  Service  Service[]
}

model Wallet {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  isActive    Boolean   @default(true) @db.Bool
  userId      String    @db.ObjectId
  promotionId String    @db.ObjectId
  status      Boolean   @default(true)
  user        User      @relation(fields: [userId], references: [id])
  promotion   Promotion @relation(fields: [promotionId], references: [id])
  createAt    DateTime  @default(now())
  updateAt    DateTime  @updatedAt
}

model Notification {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  isActive Boolean  @default(true) @db.Bool
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}
